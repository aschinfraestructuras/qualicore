-- =====================================================
-- LIMPAR DOCUMENTOS INV√ÅLIDOS E PREPARAR PARA NOVOS
-- =====================================================
-- Execute este script no SQL Editor do Supabase
-- Este script limpa documentos inv√°lidos e prepara para novos uploads

-- 1. LIMPAR DOCUMENTOS INV√ÅLIDOS DO ENSAIO ESPEC√çFICO
-- =====================================================

-- Limpar documentos do ensaio que est√° a dar erro 404
UPDATE ensaios 
SET documents = '[]'::jsonb
WHERE id = '50c5d440-b91a-45ce-9506-6b59ff390fa7';

-- Verificar se foi limpo
SELECT 
    'DOCUMENTOS LIMPOS' as verifica√ß√£o,
    id,
    codigo,
    documents,
    CASE 
        WHEN documents IS NULL OR documents = '[]'::jsonb THEN '‚úÖ Limpo'
        ELSE '‚ùå Ainda tem documentos'
    END as status
FROM ensaios 
WHERE id = '50c5d440-b91a-45ce-9506-6b59ff390fa7';

-- 2. GARANTIR QUE O BUCKET EST√Å P√öBLICO
-- =====================================================

-- For√ßar bucket documents a ser p√∫blico
UPDATE storage.buckets 
SET public = true
WHERE name = 'documents';

-- Verificar configura√ß√£o
SELECT 
    'BUCKET P√öBLICO' as verifica√ß√£o,
    id,
    name,
    public,
    CASE 
        WHEN public THEN '‚úÖ P√∫blico - Documentos acess√≠veis'
        ELSE '‚ùå Privado - Pode causar erro 404'
    END as status
FROM storage.buckets 
WHERE name = 'documents';

-- 3. CONFIGURAR POL√çTICAS MUITO PERMISSIVAS
-- =====================================================

-- Remover todas as pol√≠ticas antigas
DROP POLICY IF EXISTS "Acesso p√∫blico total aos documentos" ON storage.objects;
DROP POLICY IF EXISTS "Documentos podem ser vistos por todos" ON storage.objects;
DROP POLICY IF EXISTS "Qualquer pessoa pode fazer upload" ON storage.objects;
DROP POLICY IF EXISTS "Qualquer pessoa pode atualizar" ON storage.objects;
DROP POLICY IF EXISTS "Qualquer pessoa pode remover" ON storage.objects;
DROP POLICY IF EXISTS "Acesso total aos documentos" ON storage.objects;

-- Criar pol√≠tica muito permissiva
CREATE POLICY "Acesso total aos documentos" ON storage.objects
    FOR ALL USING (bucket_id = 'documents');

-- Verificar pol√≠ticas
SELECT 
    'POL√çTICAS CONFIGURADAS' as verifica√ß√£o,
    policyname,
    cmd,
    CASE 
        WHEN cmd = 'ALL' THEN '‚úÖ Todas as a√ß√µes permitidas'
        ELSE '‚ùì A√ß√£o espec√≠fica'
    END as status
FROM pg_policies 
WHERE schemaname = 'storage'
AND tablename = 'objects'
AND qual LIKE '%documents%';

-- 4. LIMPAR FICHEIROS INV√ÅLIDOS DO STORAGE
-- =====================================================

-- Listar ficheiros que podem estar causando problemas
SELECT 
    'FICHEIROS PROBLEM√ÅTICOS' as verifica√ß√£o,
    name,
    id,
    updated_at,
    CASE 
        WHEN name LIKE '%ensaio%' AND name LIKE '%50c5d440%' THEN '‚ö†Ô∏è Ficheiro do ensaio problem√°tico'
        WHEN name LIKE '%Relatorio-Fotografico%' THEN '‚ö†Ô∏è Ficheiro que est√° a dar erro 404'
        ELSE 'üìÑ Outro ficheiro'
    END as tipo
FROM storage.objects 
WHERE bucket_id = 'documents'
AND (
    name LIKE '%ensaio%' OR
    name LIKE '%50c5d440%' OR
    name LIKE '%Relatorio-Fotografico%'
)
ORDER BY updated_at DESC;

-- 5. PREPARAR PARA NOVO UPLOAD
-- =====================================================

-- Verificar se a coluna documents existe e est√° configurada
SELECT 
    'PREPARA√á√ÉO PARA UPLOAD' as verifica√ß√£o,
    column_name,
    data_type,
    is_nullable,
    column_default,
    CASE 
        WHEN column_name = 'documents' AND data_type = 'jsonb' THEN '‚úÖ Configurada corretamente'
        ELSE '‚ùå Pode ter problemas'
    END as status
FROM information_schema.columns 
WHERE table_name = 'ensaios'
AND column_name = 'documents';

-- 6. VERIFICA√á√ÉO FINAL ANTES DE NOVO UPLOAD
-- =====================================================

-- Verifica√ß√£o completa
SELECT 
    'VERIFICA√á√ÉO FINAL' as verifica√ß√£o,
    'Bucket p√∫blico' as item,
    CASE 
        WHEN EXISTS (SELECT 1 FROM storage.buckets WHERE name = 'documents' AND public = true)
        THEN '‚úÖ Sim'
        ELSE '‚ùå N√£o'
    END as status
UNION ALL
SELECT 
    'VERIFICA√á√ÉO FINAL' as verifica√ß√£o,
    'Pol√≠ticas configuradas' as item,
    CASE 
        WHEN EXISTS (SELECT 1 FROM pg_policies WHERE schemaname = 'storage' AND tablename = 'objects')
        THEN '‚úÖ Sim'
        ELSE '‚ùå N√£o'
    END as status
UNION ALL
SELECT 
    'VERIFICA√á√ÉO FINAL' as verifica√ß√£o,
    'Coluna documents' as item,
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'ensaios' AND column_name = 'documents')
        THEN '‚úÖ Sim'
        ELSE '‚ùå N√£o'
    END as status
UNION ALL
SELECT 
    'VERIFICA√á√ÉO FINAL' as verifica√ß√£o,
    'Ensaio limpo' as item,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM ensaios 
            WHERE id = '50c5d440-b91a-45ce-9506-6b59ff390fa7' 
            AND (documents IS NULL OR documents = '[]'::jsonb)
        )
        THEN '‚úÖ Sim'
        ELSE '‚ùå N√£o'
    END as status;

-- 7. INSTRU√á√ïES PARA NOVO UPLOAD
-- =====================================================

SELECT 
    'INSTRU√á√ïES PARA NOVO UPLOAD' as verifica√ß√£o,
    '1. V√° para a aplica√ß√£o' as passo,
    '2. Abra o ensaio ENS-2025-0718-620' as acao,
    '3. Clique em "Editar"' as proximo,
    '4. Na se√ß√£o Documentos, carregue um novo ficheiro' as upload,
    '5. Salve o ensaio' as salvar,
    '6. Teste visualizar e descarregar' as testar
FROM (SELECT 1) as dummy; 